[build-system]
requires = ["setuptools>=45", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "ledgerflow"
version = "1.0.0"
description = "Production-grade invoice generation system with pluggable tax strategies"
authors = [
    {name = "LedgerFlow Team", email = "team@ledgerflow.com"}
]
readme = "README.md"
requires-python = ">=3.9"
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
]

dependencies = [
    "flask>=2.0.0",
    "sqlalchemy>=1.4.0",
    "alembic>=1.7.0",
    "redis>=4.0.0",
    "psycopg2-binary>=2.9.0",
    "reportlab>=3.6.0",
    "openpyxl>=3.0.0",
    "pyyaml>=6.0",
    "python-dateutil>=2.8.0",
    "cryptography>=3.4.0",
    "prometheus-client>=0.14.0",
    "hypothesis>=6.0.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "pytest-xdist>=3.0.0",
    "pytest-mock>=3.10.0",
    "black>=22.0.0",
    "flake8>=5.0.0",
    "mypy>=0.991",
    "ruff>=0.0.261",
    "hypothesis>=6.0.0",
    "coverage>=7.0.0",
]

# Entry points for tax strategy plugins
[project.entry-points."ledgerflow.tax_strategies"]
gst = "app.core.tax_strategies.gst_strategy:GSTStrategy"
vat = "app.core.tax_strategies.vat_strategy:VATStrategy"
no_tax = "app.core.tax_strategies.no_tax_strategy:NoTaxStrategy"

[tool.setuptools.packages.find]
where = ["."]
include = ["app*", "tests*"]

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--strict-markers",
    "--strict-config",
    "--verbose",
    "--cov=app",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--cov-fail-under=90"
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
    "property: marks tests as property-based tests",
    "performance: marks tests as performance tests",
]

[tool.coverage.run]
source = ["app"]
omit = [
    "*/tests/*",
    "*/test_*",
    "*/__pycache__/*",
    "*/migrations/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "if TYPE_CHECKING:",
]
fail_under = 90
show_missing = true

[tool.coverage.html]
directory = "htmlcov"

[tool.black]
line-length = 88
target-version = ['py39']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.ruff]
target-version = "py39"
line-length = 88

[tool.ruff.lint]
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
]

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["F401"]
"tests/*" = ["B011"]

[tool.mypy]
python_version = "3.9"
check_untyped_defs = true
disallow_any_generics = true
disallow_incomplete_defs = true
disallow_untyped_defs = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_return_any = true
strict_equality = true

[[tool.mypy.overrides]]
module = [
    "flask.*",
    "sqlalchemy.*",
    "alembic.*",
    "redis.*",
    "reportlab.*",
    "openpyxl.*",
    "yaml.*",
    "prometheus_client.*",
]
ignore_missing_imports = true